{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Main Docs","title":"Home"},{"location":"#main-docs","text":"","title":"Main Docs"},{"location":"sections/infrastructure/ansible/issues/","text":"Issues Unreachable ssh-agent bash ssh-add ~/.ssh/id_rsa","title":"Issues"},{"location":"sections/infrastructure/ansible/issues/#issues","text":"","title":"Issues"},{"location":"sections/infrastructure/ansible/issues/#unreachable","text":"ssh-agent bash ssh-add ~/.ssh/id_rsa","title":"Unreachable"},{"location":"sections/infrastructure/docker/commands/","text":"Commands Commands docs Remove All containers docker container stop $( docker container ls -aq ) docker container rm $( docker container ls -aq ) Filter docker container prune --filter \"until=12h\"","title":"Commands"},{"location":"sections/infrastructure/docker/commands/#commands","text":"Commands docs","title":"Commands"},{"location":"sections/infrastructure/docker/commands/#remove","text":"All containers docker container stop $( docker container ls -aq ) docker container rm $( docker container ls -aq ) Filter docker container prune --filter \"until=12h\"","title":"Remove"},{"location":"sections/infrastructure/docker/models/","text":"Models Python for Postgres/Postgis Dockerfile model FROM python:3.7-stretch MAINTAINER ivan ENV PYTHONUNBUFFERED 1 COPY ./requirements.txt /requirements.txt RUN apt update && apt install postgresql-server-dev-all binutils libproj-dev gdal-bin -y RUN pip install -r /requirements.txt RUN mkdir /app WORKDIR /app COPY ./app /app RUN adduser --no-create-home user USER user docker-compose.yml Model version : \"3\" services : app : build : context : . container_name : colectivos-app ports : - \"8000:8000\" volumes : - ./app:/app command : sh -c \"gunicorn project_core.wsgi:application -w 4 -b 0.0.0.0:8000 --reload\" env_file : - ./vars.env depends_on : - db networks : - colectivos-network db : build : context : . dockerfile : Dockerfile-postgres container_name : colectivos-db ports : - \"5433:5432\" env_file : - ./vars.env networks : - colectivos-network networks : colectivos-network : driver : bridge","title":"Models"},{"location":"sections/infrastructure/docker/models/#models","text":"","title":"Models"},{"location":"sections/infrastructure/docker/models/#python-for-postgrespostgis-dockerfile-model","text":"FROM python:3.7-stretch MAINTAINER ivan ENV PYTHONUNBUFFERED 1 COPY ./requirements.txt /requirements.txt RUN apt update && apt install postgresql-server-dev-all binutils libproj-dev gdal-bin -y RUN pip install -r /requirements.txt RUN mkdir /app WORKDIR /app COPY ./app /app RUN adduser --no-create-home user USER user","title":"Python for Postgres/Postgis Dockerfile model"},{"location":"sections/infrastructure/docker/models/#docker-composeyml-model","text":"version : \"3\" services : app : build : context : . container_name : colectivos-app ports : - \"8000:8000\" volumes : - ./app:/app command : sh -c \"gunicorn project_core.wsgi:application -w 4 -b 0.0.0.0:8000 --reload\" env_file : - ./vars.env depends_on : - db networks : - colectivos-network db : build : context : . dockerfile : Dockerfile-postgres container_name : colectivos-db ports : - \"5433:5432\" env_file : - ./vars.env networks : - colectivos-network networks : colectivos-network : driver : bridge","title":"docker-compose.yml Model"},{"location":"sections/infrastructure/nginx/","text":"Nginx Main","title":"Index"},{"location":"sections/infrastructure/nginx/#nginx-main","text":"","title":"Nginx Main"},{"location":"sections/infrastructure/nginx/models/","text":"Models","title":"Models"},{"location":"sections/infrastructure/nginx/models/#models","text":"","title":"Models"},{"location":"sections/infrastructure/vagrant/models/","text":"Models Vagrantfile with shell provision VAGRANTFILE_API_VERSION = \"2\" $script = << SCRIPT sudo apt-get update sudo apt-get install -y curl curl -fsSL get.docker.com -o get-docker.sh sh get-docker.sh SCRIPT Vagrant . configure ( VAGRANTFILE_API_VERSION ) do | config | config . vm . define \"m2\" do | m2 | m2 . vm . box = \"generic/ubuntu1804\" m2 . vm . network \"forwarded_port\" , guest : 80 , host : 8080 m2 . vm . network \"forwarded_port\" , guest : 443 , host : 8443 end config . vm . provision \"shell\" , inline : $script config . ssh . username = \"vagrant\" end","title":"Models"},{"location":"sections/infrastructure/vagrant/models/#models","text":"","title":"Models"},{"location":"sections/infrastructure/vagrant/models/#vagrantfile-with-shell-provision","text":"VAGRANTFILE_API_VERSION = \"2\" $script = << SCRIPT sudo apt-get update sudo apt-get install -y curl curl -fsSL get.docker.com -o get-docker.sh sh get-docker.sh SCRIPT Vagrant . configure ( VAGRANTFILE_API_VERSION ) do | config | config . vm . define \"m2\" do | m2 | m2 . vm . box = \"generic/ubuntu1804\" m2 . vm . network \"forwarded_port\" , guest : 80 , host : 8080 m2 . vm . network \"forwarded_port\" , guest : 443 , host : 8443 end config . vm . provision \"shell\" , inline : $script config . ssh . username = \"vagrant\" end","title":"Vagrantfile with shell provision"}]}